#!/usr/bin/env bash

#PBS -N vmmr
#PBS -l select=1:ncpus=8:mem=8gb:scratch_local=10gb
#PBS -l walltime=8:00:00

trap 'clean_scratch' TERM EXIT # setup SCRATCH cleaning in case of an error

module add tensorflow-1.7.1-cpu-python3


# data source directory
DATADIR="/storage/plzen1/home/radekj/vmmr"

MAKE=${MAKE}
MODEL=${MODEL}
SOURCEDIR=${SOURCE}

# checks if scratch directory is created
if [ ! -d "$SCRATCHDIR" ] ; then
  echo "Scratch directory is not created!" 1>&2; exit 1;
fi

# enters user's scratch directory
cd $SCRATCHDIR || exit 1

echo $MAKE
echo $MODEL
echo $SOURCEDIR
echo $SCRATCHDIR

# copy source data
echo "p0"

mkdir -p results
mkdir -p tasks
mkdir -p source
mkdir -p cleaned
mkdir -p interier
echo "p00"
mkdir -p "source/$MAKE"
mkdir -p "cleaned/$MAKE"
mkdir -p "interier/$MAKE"
echo "p000"
mkdir -p "source/$MAKE/$MODEL"
mkdir -p "cleaned/$MAKE/$MODEL"
mkdir -p "interier/$MAKE/$MODEL"

echo "p1"
cp -R "$DATADIR/datasets/source/$SOURCEDIR/$MAKE/$MODEL/." "$SCRATCHDIR/source/$MAKE/$MODEL/"
echo "p2"

# copy scripts
cd $SCRATCHDIR
cp -R $DATADIR/tasks/. tasks
cd tasks
echo "p3"

python3 svm_classifier.py "$SCRATCHDIR/source/$MAKE/$MODEL/" > $SCRATCHDIR/results/results_$MODEL.out
echo "p4"

cp -R "$SCRATCHDIR/cleaned/$MAKE/." "$DATADIR/datasets/cleaned/$MAKE/"
cp -R "$SCRATCHDIR/interier/$MAKE/." "$DATADIR/datasets/interier/$MAKE/"
echo "p5"
cp $SCRATCHDIR/results/results_$MODEL.out "$DATADIR/results/"
cd $SCRATCHDIR
echo "p6"
export CLEAN_SCRATCH=true
